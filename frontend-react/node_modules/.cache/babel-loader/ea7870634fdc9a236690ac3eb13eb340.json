{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\ReactJS\\\\Stock-Trading-Simulation\\\\Frontend React\\\\src\\\\components\\\\Stocks.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Message from \"./Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Stocks(props) {\n  _s();\n\n  let [money, setMoney] = useState(0);\n  let [stockSearch, setStockSearch] = useState(\"\");\n  let [currentStock, setCurrentStock] = useState(\"\");\n  let [currentHigh, setCurrentHigh] = useState(0);\n  let [volumeOwned, setVolumeOwned] = useState(0);\n  let [volumeTrade, setVolumeTrade] = useState(0);\n  let [message, setMessage] = useState(\"\");\n  let [messageColor, setMessageColor] = useState(\"red\");\n  let [seeTrade, setSeeTrade] = useState(false);\n  let [tradeType, setTradeType] = useState(\"Buy\");\n  let [total, setTotal] = useState(0);\n\n  function configureTotal(volume) {\n    if (currentHigh !== 0 && volume !== 0) {\n      setTotal(Math.round(currentHigh * volume * 100) / 100);\n    }\n  }\n\n  function checkMoney() {\n    fetch(props.link + \"/checkmoney\", {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: props.currentUsername\n      }) //accept is not necessary\n\n    }).then(res => res.json()).then(res => {\n      setMoney(Math.round(res.money * 100) / 100);\n    });\n  }\n\n  if (props.currentUsername !== \"\" && money === 0) {\n    checkMoney();\n  }\n\n  function findStock(name) {\n    fetch(props.link + \"/searchstock\", {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        stockName: name,\n        username: props.currentUsername\n      }) //accept is not necessary\n\n    }).then(res => res.json()).then(res => {\n      if (res.high === 0) {\n        setMessage(\"Stock Not Found.\");\n      } else {\n        setCurrentStock(name);\n        setCurrentHigh(Math.round(res.high * 100) / 100);\n        setVolumeOwned(res.volumeOwned);\n        setMessage(\"\");\n        setSeeTrade(false);\n      }\n    });\n  }\n\n  function tradeStock() {\n    if (currentStock !== \"\") {\n      fetch(props.link + \"/\" + tradeType.toLowerCase() + \"stock\", {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          stockName: currentStock,\n          unitPrice: currentHigh,\n          quantity: volumeTrade,\n          username: props.currentUsername\n        }) //accept is not necessary\n\n      }).then(res => res.json()).then(res => {\n        setMessage(res.message);\n        setMessageColor(\"green\");\n        setTimeout(() => {\n          setCurrentStock(\"\");\n          setMessage(\"\");\n          window.location.reload();\n        }, \"1500\");\n      });\n    }\n  }\n\n  useEffect(() => {\n    if (props.reroutedStock !== \"\") {\n      findStock(props.reroutedStock);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stocks-search-section bg-dark justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"d-flex\",\n        children: [props.currentUsername !== \"\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => setStockSearch(event.target.value.toUpperCase()),\n          className: \"form-control stocks-searchbar me-2\",\n          name: \"stockName\",\n          type: \"search\",\n          placeholder: \"Search for any stock!\",\n          \"aria-label\": \"Search\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => setStockSearch(event.target.value.toUpperCase()),\n          className: \"form-control stocks-searchbar me-2\",\n          name: \"stockName\",\n          type: \"search\",\n          placeholder: \"Login to Trade Stocks!\",\n          \"aria-label\": \"Search\",\n          autoComplete: \"off\",\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: event => {\n            event.preventDefault();\n            findStock(stockSearch);\n          },\n          className: \"btn btn-success\",\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), props.currentUsername !== \"\" ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"green\"\n      },\n      children: [\"Money: $\", money]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Message, {\n      message: \"Login to see Stocks\",\n      color: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Message, {\n      message: message,\n      color: messageColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), currentStock !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parchment\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"stocks-header\",\n          children: [\"Result: \", currentStock]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"stocks-header\",\n          children: [\" Unit Price: $\", currentHigh]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"stocks-header\",\n          children: [\"Owned: \", volumeOwned]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSeeTrade(!seeTrade),\n          type: \"button\",\n          className: \"btn btn-lg btn-success trade-button\",\n          children: \"Trade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 12\n    }, this), currentStock !== \"\" && seeTrade ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parchment\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: event => setTradeType(event.target.value),\n          className: \"new-stock-input\",\n          \"aria-label\": \".form-select-lg example\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Buy\",\n            children: \"Buy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Sell\",\n            children: \"Sell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"off\",\n          onChange: event => {\n            setVolumeTrade(event.target.value);\n            configureTotal(event.target.value);\n          },\n          style: {\n            textAlign: \"center\"\n          },\n          placeHolder: \"Quantity\",\n          name: \"quantity\",\n          type: \"text\",\n          className: \"new-stock-input\",\n          \"aria-label\": \"Server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => setVolumeTrade(event.target.value),\n          style: {\n            backgroundColor: \"#eeeeee\"\n          },\n          type: \"text\",\n          className: \"new-stock-input\",\n          \"aria-label\": \"Server\",\n          value: \"Total: $\" + total,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: tradeStock,\n          type: \"submit\",\n          className: \"btn btn-lg btn-success trade-button\",\n          children: [tradeType, \" Stock\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 1\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Stocks, \"jz0GGk7wGiW3v4Epyt5lqaGp0vQ=\");\n\n_c = Stocks;\nexport default Stocks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stocks\");","map":{"version":3,"sources":["C:/Users/David/Desktop/ReactJS/Stock-Trading-Simulation/Frontend React/src/components/Stocks.jsx"],"names":["React","useState","useEffect","Message","Stocks","props","money","setMoney","stockSearch","setStockSearch","currentStock","setCurrentStock","currentHigh","setCurrentHigh","volumeOwned","setVolumeOwned","volumeTrade","setVolumeTrade","message","setMessage","messageColor","setMessageColor","seeTrade","setSeeTrade","tradeType","setTradeType","total","setTotal","configureTotal","volume","Math","round","checkMoney","fetch","link","method","mode","headers","body","JSON","stringify","username","currentUsername","then","res","json","findStock","name","stockName","high","tradeStock","toLowerCase","unitPrice","quantity","setTimeout","window","location","reload","reroutedStock","event","target","value","toUpperCase","preventDefault","color","textAlign","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Message from \"./Message\";\n\nfunction Stocks(props){\n    let [money, setMoney] = useState(0);\n    let [stockSearch, setStockSearch] = useState(\"\");\n    let [currentStock, setCurrentStock] = useState(\"\");\n    let [currentHigh, setCurrentHigh] = useState(0);\n    let [volumeOwned, setVolumeOwned] = useState(0);\n\n    let [volumeTrade, setVolumeTrade] = useState(0);\n\n    let [message, setMessage] = useState(\"\");\n    let [messageColor, setMessageColor] = useState(\"red\");    \n\n    let [seeTrade, setSeeTrade]  = useState(false);\n    let [tradeType, setTradeType] = useState(\"Buy\");\n\n    let [total, setTotal] = useState(0);\n    function configureTotal(volume){\n      if(currentHigh!==0 && volume!==0){\n        setTotal(Math.round(currentHigh*volume*100)/100);\n      }\n    }\n\n\n    function checkMoney(){\n      fetch(props.link + \"/checkmoney\", {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\"Accept\": \"application/json\", \"Content-Type\": \"application/json\"},\n        body: JSON.stringify({username: props.currentUsername}) //accept is not necessary\n    }).then((res) => res.json())\n      .then((res) => {\n          setMoney(Math.round(res.money*100)/100);\n      });\n    }\n    if(props.currentUsername!==\"\" && money===0){\n    checkMoney();\n    }\n\n    function findStock(name){\n      fetch(props.link + \"/searchstock\", {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\"Accept\": \"application/json\", \"Content-Type\": \"application/json\"},\n        body: JSON.stringify({stockName: name, username: props.currentUsername}) //accept is not necessary\n    }).then((res) => res.json())\n    .then((res) => {\n       if(res.high===0){\n         setMessage(\"Stock Not Found.\");\n       }\n       else{\n         setCurrentStock(name);\n         setCurrentHigh(Math.round(res.high*100)/100);\n         setVolumeOwned(res.volumeOwned);\n         setMessage(\"\");\n         setSeeTrade(false);\n       }\n    });\n    }\n    function tradeStock(){\n      if(currentStock!==\"\"){\n        fetch(props.link + \"/\" + tradeType.toLowerCase() + \"stock\", {\n          method: 'POST',\n          mode: 'cors',\n          headers: {\"Accept\": \"application/json\", \"Content-Type\": \"application/json\"},\n          body: JSON.stringify({stockName: currentStock, unitPrice: currentHigh, quantity: volumeTrade, username: props.currentUsername}) //accept is not necessary\n      }).then((res) => res.json())\n      .then((res) => {\n        setMessage(res.message);\n        setMessageColor(\"green\");\n        setTimeout(()=>{\n          setCurrentStock(\"\");\n          setMessage(\"\");\n          window.location.reload();\n          }, \"1500\")\n      });\n      }\n    }\n\n    useEffect (() => {\n      if(props.reroutedStock!==\"\"){\n        findStock(props.reroutedStock);\n      }\n    }, []);\n\n\n    return (\n        <div>\n        <div className=\"stocks-search-section bg-dark justify-content-center\">\n        <form className=\"d-flex\">\n        {props.currentUsername!==\"\" ?\n          <input onChange={(event) => setStockSearch(event.target.value.toUpperCase())}className=\"form-control stocks-searchbar me-2\" name=\"stockName\" type=\"search\" placeholder=\"Search for any stock!\" aria-label=\"Search\" autoComplete=\"off\" />:\n          <input onChange={(event) => setStockSearch(event.target.value.toUpperCase())}className=\"form-control stocks-searchbar me-2\" name=\"stockName\" type=\"search\" placeholder=\"Login to Trade Stocks!\" aria-label=\"Search\" autoComplete=\"off\" readOnly />}\n          <button onClick={(event) => {event.preventDefault(); findStock(stockSearch);}} className=\"btn btn-success\" type=\"submit\">Search</button>\n        </form>\n      </div>\n      {props.currentUsername !== \"\" ? \n      <h1 style={{color: \"green\"}}>Money: ${money}</h1>\n      :\n      <Message message=\"Login to see Stocks\" color=\"black\" />\n      }\n      <Message message={message} color={messageColor} />\n\n{currentStock!==\"\" ? <div>\n\n\n\n    <div className=\"parchment\">\n      <h1 className=\"stocks-header\">Result: {currentStock}</h1>\n      <h1 className=\"stocks-header\"> Unit Price: ${currentHigh}</h1>\n      <h1 className=\"stocks-header\">Owned: {volumeOwned}</h1>\n      <button onClick={() => setSeeTrade(!seeTrade)} type=\"button\" className=\"btn btn-lg btn-success trade-button\">Trade</button>\n    </div>\n\n      {/* old way of showing stock info */}\n  {/* <div className=\"stocks-info-section container-fluid\">\n    <div className=\"row align-items-center\" style={{height: \"100%\"}}>\n      <div className=\"col card stocks-info-card\">\n        <div className=\"card-body\">\n          <h2 id=\"custom\" className=\"card-header stocks-header\">Result:</h2>\n          <h1 className=\"card-text\">{currentStock}</h1>\n        </div>\n      </div>\n      <div className=\"col card stocks-info-card\">\n        <div className=\"card-body\">\n          <h2 className=\"card-header stocks-header\"> Unit Price:</h2>\n          <h1 id=\"up2\" type=\"text\" className=\"card-text\" aria-label=\"Server\" readOnly>${currentHigh} </h1>\n        </div>\n      </div>\n      <div className=\"col card stocks-info-card\">\n        <div className=\"card-body\">\n          <h2 className=\"card-header stocks-header\">Owned:</h2>\n          <h1 className=\"card-text\">{volumeOwned}</h1>\n          </div>\n        </div>\n      <div className=\"col card stocks-info-card\">\n        <button onClick={() => setSeeTrade(!seeTrade)} type=\"button\" className=\"btn btn-lg btn-danger stocks-info-button\">Trade</button>\n        <button onClick={() => setSeeGraph(!seeGraph)} type=\"button\" className=\"btn btn-lg btn-danger stocks-info-button\">Graph</button>\n      </div>\n    </div>\n    </div> */}\n    \n    </div>:<div></div>}\n\n{currentStock!== \"\" && seeTrade ?\n<div>\n{/* <img className=\"arrow-image\" src={require(\"./../images/arrow.png\")} alt=\"Arrow Image\" /> */}\n<div className=\"parchment\">\n<select onChange={(event) => setTradeType(event.target.value)} className=\"new-stock-input\" aria-label=\".form-select-lg example\">\n      <option value=\"Buy\">Buy</option>\n      <option value=\"Sell\">Sell</option>\n      </select>\n<input autoComplete=\"off\" onChange={(event) => {setVolumeTrade(event.target.value); configureTotal(event.target.value); }} style={{textAlign: \"center\"}} placeHolder=\"Quantity\" name=\"quantity\" type=\"text\" className=\"new-stock-input\" aria-label=\"Server\" />\n<input onChange={(event)=>setVolumeTrade(event.target.value)} style={{backgroundColor: \"#eeeeee\"}} type=\"text\" className=\"new-stock-input\" aria-label=\"Server\" value={\"Total: $\" + total} readOnly></input>\n<button onClick={tradeStock} type=\"submit\" className=\"btn btn-lg btn-success trade-button\">{tradeType} Stock</button>\n</div>\n\n\n  {/* <div className=\"stocks-buy-section container-fluid\">\n    <div className=\"row align-items-center\" style={{height: \"100%\"}}>\n      <div className=\"col-4\">\n        <div className=\"col card stocks-buy-card\">\n          <select onChange={(event) => setTradeType(event.target.value)} className=\"form-select form-select-lg\" aria-label=\".form-select-lg example\">\n          <option value=\"Buy\">Buy</option>\n          <option value=\"Sell\">Sell</option>\n          </select>\n\n        </div>\n      </div>\n      <div className=\"col-4\">\n        <div className=\"mb-3 row stocks-buy-input\">\n          <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">Quantity:</label>\n          <div className=\"col-sm-8\">\n            <input autoComplete=\"off\" onChange={(event) => {setVolumeTrade(event.target.value); configureTotal(event.target.value); }} style={{textAlign: \"center\"}} name=\"quantity\" type=\"text\" className=\"form-control\" id=\"qty\" aria-label=\"Server\" />\n          </div>\n        </div>\n        <div className=\"mb-3 row stocks-buy-input\">\n          <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label\">Total:</label>\n          <div className=\"col-sm-8\">\n            <input onChange={(event)=>setVolumeTrade(event.target.value)} style={{textAlign: \"center\"}} type=\"text\" className=\"form-control\" id=\"total\" aria-label=\"Server\" value={\"$\" + total} readOnly></input>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-3 card stocks-buy-card\">\n        <button onClick={tradeStock} type=\"submit\" className=\"btn btn-lg btn-success stocks-buy-button\">{tradeType} Stock</button>\n      </div>\n      <div className=\"col-3\">\n      </div>\n    </div>\n  </div> */}\n\n\n\n</div>\n:<div></div>}\n\n</div>\n);\n}\nexport default Stocks;"]},"metadata":{},"sourceType":"module"}