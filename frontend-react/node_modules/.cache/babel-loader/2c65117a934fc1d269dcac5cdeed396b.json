{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\ReactJS\\\\Stock-Market-Simulation\\\\Frontend React\\\\src\\\\components\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Message from \"./Message\";\nimport LoginForm from \"./LoginForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  let [message, setMessage] = useState(\"\");\n  let [messageColor, setMessageColor] = useState(\"red\");\n  let fullAccountParts = [{\n    key: 1,\n    fieldName: \"Username\",\n    submitName: \"Username\"\n  }, {\n    key: 2,\n    fieldName: \"First Name\",\n    submitName: \"FirstName\"\n  }, {\n    key: 3,\n    fieldName: \"Last Name\",\n    submitName: \"LastName\"\n  }, {\n    key: 4,\n    fieldName: \"Email\",\n    submitName: \"Email\"\n  }, {\n    key: 5,\n    fieldName: \"City\",\n    submitName: \"City\"\n  }, {\n    key: 6,\n    fieldName: \"State\",\n    submitName: \"State\"\n  }, {\n    key: 7,\n    fieldName: \"Password\",\n    submitName: \"Password\"\n  }, {\n    key: 8,\n    fieldName: \"Confirm Password\",\n    submitName: \"PasswordMatch\"\n  }];\n  let loginParts = [{\n    key: 1,\n    fieldName: \"Username\",\n    submitName: \"Username\"\n  }, {\n    key: 2,\n    fieldName: \"Password\",\n    submitName: \"Password\"\n  }];\n\n  function create(args) {\n    fetch(props.link + \"/create\", {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: args.username,\n        firstName: args.firstName,\n        lastName: args.lastName,\n        email: args.email,\n        city: args.city,\n        state: args.state,\n        password: args.password,\n        passwordMatch: args.passwordMatch\n      }) //accept is not necessary\n\n    }).then(res => res.json()).then(res => {\n      if (res.message !== \"Success\") {\n        setMessage(res.message);\n      } else {\n        setMessage(\"\");\n        props.changeUsername(args.username);\n      }\n\n      props.reload();\n    });\n  }\n\n  function edit(args) {\n    fetch(props.link + \"/editprofile\", {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: props.currentUsername,\n        newUsername: args.username,\n        firstName: args.firstName,\n        lastName: args.lastName,\n        email: args.email,\n        city: args.city,\n        state: args.state,\n        password: args.password\n      }) //accept is not necessary\n\n    }).then(res => res.json()).then(res => {\n      if (res.message !== \"Success\") {\n        setMessage(res.message);\n        setMessageColor(\"red\");\n      } else {\n        setMessage(res.message);\n        setMessageColor(\"green\");\n      }\n\n      setTimeout(() => {\n        setMessage(\"\");\n        props.reload();\n      }, \"1000\");\n    });\n  }\n\n  function login(args) {\n    //for doing a post request\n    console.log(args);\n    fetch(props.link + \"/login\", {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: args.username,\n        password: args.password\n      }) //accept is not necessary\n\n    }).then(res => res.json()).then(res => {\n      console.log(res.message);\n\n      if (res.message !== \"Success\") {\n        setMessage(res.message);\n        console.log(args.username);\n      } else {\n        setMessage(\"\");\n        props.changeUsername(args.username);\n      }\n    });\n  }\n\n  if (props.currentUsername === \"\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Message, {\n        message: message,\n        color: messageColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n        title: \"Log In Here\",\n        inputs: loginParts,\n        func: login,\n        color1: \"#a5aaab\",\n        color2: \"white\",\n        btnName: \"Login\",\n        height: \"40vh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n        title: \"Or, Create An Account\",\n        inputs: fullAccountParts,\n        func: create,\n        color1: \"#d2b6e5\",\n        color2: \"white\",\n        btnName: \"Create\",\n        height: \"60vh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Message, {\n        message: message,\n        color: messageColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"row g-3 needs-validation\",\n        onSubmit: event => {\n          event.preventDefault();\n          props.changeUsername(\"\");\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\",\n            backgroundColor: \"black\",\n            paddingBottom: \"20px\"\n          },\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              fontSize: \"3rem\",\n              color: \"green\"\n            },\n            children: [\"Logged In As \", props.currentUsername, \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            type: \"submit\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n        title: \"Edit Profile\",\n        inputs: fullAccountParts,\n        func: edit,\n        color1: \"#add8e6\",\n        color2: \"white\",\n        btnName: \"Save Changes\",\n        height: \"100vh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(Login, \"MYr430ZfqOrKckcuY4Ob3AF/R0g=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/David/Desktop/ReactJS/Stock-Market-Simulation/Frontend React/src/components/Login.jsx"],"names":["React","useState","Message","LoginForm","Login","props","message","setMessage","messageColor","setMessageColor","fullAccountParts","key","fieldName","submitName","loginParts","create","args","fetch","link","method","mode","headers","body","JSON","stringify","username","firstName","lastName","email","city","state","password","passwordMatch","then","res","json","changeUsername","reload","edit","currentUsername","newUsername","setTimeout","login","console","log","event","preventDefault","textAlign","backgroundColor","paddingBottom","fontSize","color"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport Message from \"./Message\";\nimport LoginForm from \"./LoginForm\";\nfunction Login(props){\nlet [message, setMessage] = useState(\"\");\nlet [messageColor, setMessageColor] = useState(\"red\");\nlet fullAccountParts = [{key: 1, fieldName: \"Username\", submitName: \"Username\"}, {key: 2, fieldName: \"First Name\", submitName: \"FirstName\"}, \n    {key: 3, fieldName: \"Last Name\", submitName: \"LastName\"}, {key: 4, fieldName: \"Email\", submitName: \"Email\"}, {key: 5, fieldName: \"City\", submitName: \"City\"}, \n    {key: 6, fieldName: \"State\", submitName: \"State\"}, {key: 7, fieldName: \"Password\", submitName: \"Password\"}, {key: 8, fieldName: \"Confirm Password\", submitName: \"PasswordMatch\"}];\nlet loginParts = [{key: 1, fieldName: \"Username\", submitName: \"Username\"}, {key: 2, fieldName: \"Password\", submitName: \"Password\"}];\n\nfunction create(args){\nfetch(props.link + \"/create\", {\n    method: 'POST',\n    mode: 'cors',\n    headers: {\"Accept\": \"application/json\", \"Content-Type\": \"application/json\"},\n    body: JSON.stringify({username: args.username, firstName: args.firstName, \n        lastName: args.lastName, email: args.email, city: args.city, \n        state: args.state, password: args.password, passwordMatch: args.passwordMatch}) //accept is not necessary\n}).then(res => res.json())\n.then( res => {\n    if(res.message!==\"Success\"){\n        setMessage(res.message);\n    }\n    else{\n        setMessage(\"\");\n        props.changeUsername(args.username);\n    }\n    props.reload();\n});\n}\nfunction edit(args){\nfetch(props.link + \"/editprofile\", {\nmethod: 'POST',\nmode: 'cors',\nheaders: {\"Accept\": \"application/json\", \"Content-Type\": \"application/json\"},\nbody: JSON.stringify({username: props.currentUsername, newUsername: args.username, firstName: args.firstName, \n    lastName: args.lastName, email: args.email, city: args.city, \n    state: args.state, password: args.password}) //accept is not necessary\n}).then(res => res.json())\n.then( res => {\nif(res.message!==\"Success\"){\n    setMessage(res.message);\n    setMessageColor(\"red\");\n}\nelse{\n    setMessage(res.message);\n    setMessageColor(\"green\");\n}\nsetTimeout(() => {\n    setMessage(\"\");\n    props.reload();\n}, \"1000\");\n});\n}\nfunction login(args){  //for doing a post request\n    console.log(args);\nfetch(props.link + \"/login\", {\n    method: 'POST',\n    mode: 'cors',\n    headers: {\"Accept\": \"application/json\", \"Content-Type\": \"application/json\"},\n    body: JSON.stringify({username: args.username, password: args.password}) //accept is not necessary\n}).then(res => res.json())\n.then( res => {\n    console.log(res.message);\n    if(res.message!==\"Success\"){\n        setMessage(res.message);\n        console.log(args.username);\n    }\n    else{\n        setMessage(\"\");\n        props.changeUsername(args.username);\n    }\n});\n}\n    if(props.currentUsername===\"\"){\n        return (\n        <div>\n        <Message message={message} color={messageColor} />\n        <LoginForm title=\"Log In Here\" inputs={loginParts} func={login} color1=\"#a5aaab\" color2=\"white\" btnName=\"Login\" height=\"40vh\" />\n        <LoginForm title=\"Or, Create An Account\" inputs={fullAccountParts} func={create} color1=\"#d2b6e5\" color2=\"white\" btnName=\"Create\" height=\"60vh\" />\n        </div>\n        );\n    }\n    else{\n        return (\n        <div>\n        <Message message={message} color={messageColor} />\n        <form className=\"row g-3 needs-validation\" onSubmit={(event) => {event.preventDefault(); props.changeUsername(\"\"); }}>\n        <div style={{textAlign: \"center\", backgroundColor: \"black\", paddingBottom: \"20px\"}} className=\"col-12\">\n        <h1 style={{fontSize: \"3rem\", color: \"green\"}}>Logged In As {props.currentUsername}.</h1>\n        <button className=\"btn btn-primary\" type=\"submit\">Logout</button>\n        </div>\n        </form>\n        <LoginForm title=\"Edit Profile\" inputs={fullAccountParts} func={edit} color1=\"#add8e6\" color2=\"white\" btnName=\"Save Changes\" height=\"100vh\"/>\n        </div>\n        );\n    }\n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}